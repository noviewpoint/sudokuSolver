// yield* anotherGenerator(i); is basically a convenient shorthand for

// for (var value of anotherGenerator(i)) {
//     yield value;
// }

// https://norvig.com/top95solutions.html

// const solvedSudoku = stringToSudoku(
//     "483921657967345821251876493548132976729564138136798245372689514814253769695417382"
// );
// const unsolvedSudoku = stringToSudoku(
//     "003020600900305001001806400008102900700000008006708200002609500800203009005010300"
// );

// const solvedSudoku = generateSudoku(9);
// const unsolvedSudoku = generateHolesInSudoku(solvedSudoku, 40);

// BELOW IS AN EXAMPLE OF EXTRA HARD SUDOKU (SOLUTION TIME IS ABOUT A MINUTE)

// const solvedSudoku = stringToSudoku(`
//     4 3 8 |7 9 6 |2 1 5
//     6 5 9 |1 3 2 |4 7 8
//     2 7 1 |4 5 8 |6 9 3
//     ------+------+------
//     8 4 5 |2 1 9 |3 6 7
//     7 1 3 |5 6 4 |8 2 9
//     9 2 6 |8 7 3 |1 5 4
//     ------+------+------
//     1 9 4 |3 2 5 |7 8 6
//     3 6 2 |9 8 7 |5 4 1
//     5 8 7 |6 4 1 |9 3 2
// `);
// const unsolvedSudoku = stringToSudoku(`
//     . . . |. . 6 |. . .
//     . 5 9 |. . . |. . 8
//     2 . . |. . 8 |. . .
//     ------+------+------
//     . 4 5 |. . . |. . .
//     . . 3 |. . . |. . .
//     . . 6 |. . 3 |. 5 4
//     ------+------+------
//     . . . |3 2 5 |. . 6
//     . . . |. . . |. . .
//     . . . |. . . |. . .
// `);

// return {
// 	solvedSudoku: stringToSudoku(`
// 		4 1 7 |3 6 9 |8 2 5
// 		6 3 2 |1 5 8 |9 4 7
// 		9 5 8 |7 2 4 |3 1 6
// 		------+------+------
// 		8 2 5 |4 3 7 |1 6 9
// 		7 9 1 |5 8 6 |4 3 2
// 		3 4 6 |9 1 2 |7 5 8
// 		------+------+------
// 		2 8 9 |6 4 3 |5 7 1
// 		5 7 3 |2 9 1 |6 8 4
// 		1 6 4 |8 7 5 |2 9 3
// 	`),
// 	unsolvedSudoku: stringToSudoku(`
// 		4 . . |. . . |8 . 5
// 		. 3 . |. . . |. . .
// 		. . . |7 . . |. . .
// 		------+------+------
// 		. 2 . |. . . |. 6 .
// 		. . . |. 8 . |4 . .
// 		. . . |. 1 . |. . .
// 		------+------+------
// 		. . . |6 . 3 |. 7 .
// 		5 . . |2 . . |. . .
// 		1 . 4 |. . . |. . .`),
// };